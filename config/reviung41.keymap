/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp TAB          &kp Q  &kp W  &kp E         &kp R         &kp T               &kp Y  &kp U        &kp I               &kp O    &kp P     &kp BSPC
&mt LCTRL GRAVE  &kp A  &kp S  &kp D         &kp F         &kp G               &kp H  &kp J        &kp K               &kp L    &kp SEMI  &kp SQT
&kp LSHFT        &kp Z  &kp X  &kp C         &kp V         &kp B               &kp N  &kp M        &kp COMMA           &kp DOT  &kp FSLH  &kp GRAVE
                               &kp LEFT_GUI  &lt 1 ESCAPE         &lt 4 SPACE         &lt 2 ENTER  &mt LEFT_ALT GRAVE
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT             &kp CARET       &kp AMPS      &kp ASTRK      &kp LPAR        &kp RPAR         &kp DEL
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                &kp KP_MINUS    &kp KP_EQUAL  &kp BACKSLASH  &kp LBKT        &kp RBKT         &kp GRAVE
&trans  &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp NUMBER_0          &kp UNDERSCORE  &kp KP_PLUS   &kp PIPE       &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp TILDE
                                    &trans        &trans                      &trans                  &trans        &trans
            >;
        };

        raise_layer {
            // ----------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&trans  &none  &kp LG(N8)  &kp LG(NUMBER_7)  &kp LG(NUMBER_6)  &kp LG(N5)             &kp LG(NUMBER_1)   &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp PRINTSCREEN  &kp DEL
&trans  &none  &none       &none             &none             &none                  &kp LEFT           &kp DOWN          &kp UP            &kp RIGHT         &trans           &trans
&trans  &none  &none       &trans            &trans            &trans                 &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp HOME          &kp END           &kp K_MUTE       &trans
                           &trans            &mo 3                         &kp SPACE                     &trans            &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &none  &rgb_ug RGB_TOG             &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &none  &none                       &none         &none         &none         &none         &none         &none
&none            &none            &none            &none            &none  &none                       &sys_reset    &bootloader   &none         &none         &none         &none
                                                   &none            &none                   &kp SPACE                &none         &none
            >;
        };

        numbers {
            bindings = <
&trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)         &kp LG(NUMBER_6)  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp ASTERISK  &kp BACKSPACE
&trans  &none             &none             &none             &none             &none              &kp MINUS         &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp SLASH     &none
&trans  &none             &none             &none             &none             &none              &kp PLUS          &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DOT       &none
                                            &kp LEFT_GUI      &kp LEFT_ALT                  &none                    &kp EQUAL        &kp KP_NUMBER_0
            >;
        };
    };
};
